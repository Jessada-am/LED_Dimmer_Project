
	NOLIST
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

AOUT?BBB macro Bin, Bndx, Bout
        MOVE?BA Bndx
        addlw   low (Bin)
        movwf   FSR
    if ((Bin) > 255)
        bsf     STATUS, IRP
    endif
        MOVE?BB INDF, Bout
    if ((Bin) > 255)
        bcf     STATUS, IRP
    endif
    endm

SUB?BCW macro Bin, Cin, Wout
        movlw   low (-(Cin))
        CHK?RP  Bin
        addwf   Bin, W
        MOVE?AB Wout
        movlw   low ((-(Cin)) >> 8)
        btfsc   STATUS, C
        addlw   1
        movwf   (Wout) + 1
    endm

SUB?WCW macro Win, Cin, Wout
    if ((Wout) == (Win))
        movlw   low (Cin)
        CHK?RP  Wout
        subwf   Wout, F
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        subwf   (Wout) + 1, F
    else
        movlw   low (Cin)
        CHK?RP  Win
        subwf   Win, W
        MOVE?AB Wout
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        CHK?RP  Win
        subwf   (Win) + 1, W
        MOVE?AB (Wout) + 1
    endif
    endm

CMPF?TL macro Regin, Bitin, Label
        CLRWDT?
        BIT?GOTO 0, Regin, Bitin, Label
    endm

CMPGT?BWL macro Bin, Win, Label
        MOVE?BW Bin, R0
        MOVE?WWA Win, R1
        L?CALL  CMPGT
        BIT?GOTO 0, STATUS, Z, Label
    endm
CMPGT_USED = 1

CMPLE?BCL macro Bin, Cin, Label
    if ((Cin) >= 0ffh)
        L?GOTO  Label
    else
      if ((Cin) >= 0)
        CLRWDT?
        MOVE?CA (Cin) + 1
        CHK?RP  Bin
        subwf   Bin, W
        BIT?GOTO 0, STATUS, C, Label
      endif
    endif
    endm

CMPLE?WCL macro Win, Cin, Label
    if ((Cin) >= 0ffffh)
        L?GOTO  Label
    else
      if ((Cin) >= 0)
        MOVE?WW Win, R0
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  CMPLE
        BIT?GOTO 0, STATUS, Z, Label
      endif
    endif
    endm
CMPLE_USED = 1

CMPNE?TCL macro Regin, Bitin, Cin, Label
    if ((Cin) == 0)
        CLRWDT?
        BIT?GOTO 1, Regin, Bitin, Label
    else
      if ((Cin) == 1)
        CLRWDT?
        BIT?GOTO 0, Regin, Bitin, Label
      else
        L?GOTO  Label
      endif
    endif
    endm

CMPNE?WCL macro Win, Cin, Label
    if (((Cin) > -10000h) & ((Cin) < 10000h))
        MOVE?CW	Cin, R0
        MOVE?WWA Win, R1
        L?CALL  CMPNE
        BIT?GOTO 0, STATUS, Z, Label
    else
        L?GOTO  Label
    endif
    endm
CMPNE_USED = 1

ASM? macro
        RST?RP
    endm

DEBUG?C macro Cin
        movlw   Cin
        L?CALL  DEBUG
    endm
DEBUG_USED = 1

DEBUG?T macro Regin, Bitin
        MOVE?TA Regin, Bitin
        L?CALL  DEBUG
    endm
DEBUG_USED = 1

END? macro
    local loop
loop    sleep
        L?GOTO  loop
    endm

ENDASM? macro
    endm

GOSUB?L macro Label
    local dlabel
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
      ifdef DEBUG_STACK_ADDR
        bcf     STATUS, C
        rlf     DEBUG_STACK, W
        addlw   DEBUG_STACK_ADDR
        movwf   FSR
        movlw   low (dlabel)
        movwf   INDF
        incf    FSR, F
        movlw	high (dlabel)
        movwf   INDF
      endif
        incf    DEBUG_STACK, F
    endif
        L?CALL  Label
dlabel
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

HIGH?T macro Regin, Bitin
        MOVE?CT 1, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

HSEROUT?B macro Bin
        MOVE?BA Bin
        L?CALL  HSEROUT
    endm
HSEROUT_USED = 1

HSEROUT?C macro Cin
        movlw   Cin
        L?CALL  HSEROUT
    endm
HSEROUT_USED = 1

LCDOUT?C macro Cin
        movlw   Cin
        L?CALL  LCDOUT
    endm
LCDOUT_USED = 1

LCDOUTD?B macro Bin
        MOVE?BA Bin
        L?CALL  LCDOUTDEC
    endm
LCDOUTDEC_USED = 1

LOW?T macro Regin, Bitin
        MOVE?CT 0, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

NEXT?BCL macro Bin, Cin, Label
    if ((Cin) == 1)
        CHK?RP  Bin
      if ((PREV_BANK == 0) & (CODE_SIZE <= 2))
        incfsz  Bin, F
        goto    Label
      else
        incf    Bin, F
        BIT?GOTO 0, STATUS, Z, Label
      endif
    else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      if ((Cin) <= 255)
        BIT?GOTO 0, STATUS, C, Label
      endif
    endif
    endm

RETURN? macro
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
        decf    DEBUG_STACK, F
    endif
        RST?RP
        return
    endm

TOGGLE?T macro Regin, Bitin
        BIT?FLIP Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm


	LIST
